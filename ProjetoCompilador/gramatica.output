Terminals unused in grammar

   T_DIVIDE
   T_PLUS_EQ
   T_MINUS_EQ
   T_TIMES_EQ
   T_DIVIDE_EQ
   T_DOUBLE_PERIOD
   T_REPEAT
   T_UNTIL
   T_INVALID


Grammar

    0 $accept: input T_EOF

    1 input: T_PROGRAM T_ID T_SEMICOLON block_body T_PERIOD

    2 block_body: constant_definition_part variable_definition_part opt_procedure_definition compound_statement

    3 constant_definition_part: /* empty */
    4                         | T_CONST constant_definition opt_constant_definition

    5 constant_definition: T_ID T_EQ constant T_SEMICOLON

    6 variable_definition_part: /* empty */
    7                         | T_VAR variable_definition opt_variable_definition

    8 variable_definition: variable_group T_SEMICOLON

    9 variable_group: T_ID opt_id T_COLON type

   10 type: T_INTEGER
   11     | T_BOOLEAN
   12     | T_REAL

   13 procedure_definition: T_PROCEDURE T_ID procedure_block T_SEMICOLON

   14 procedure_block: T_SEMICOLON block_body
   15                | T_LBRACKET formal_parameter_list T_RBRACKET T_SEMICOLON block_body

   16 formal_parameter_list: parameter_definition opt_parameter_definition

   17 parameter_definition: variable_group

   18 statement: assignment_statement
   19          | procedure_statement
   20          | if_statement
   21          | while_statement
   22          | compound_statement
   23          | /* empty */

   24 assignment_statement: variable_access T_ASSIGN expression

   25 procedure_statement: T_ID
   26                    | T_ID T_LBRACKET actual_parameter_list T_RBRACKET

   27 actual_parameter_list: actual_parameter opt_actual_parameter

   28 actual_parameter: expression

   29 if_statement: T_IF expression T_THEN statement
   30             | T_IF expression T_THEN statement T_ELSE statement

   31 while_statement: T_WHILE expression T_DO statement

   32 compound_statement: T_BEGIN statement opt_statement T_END

   33 expression: simple_expression
   34           | simple_expression relational_operator simple_expression

   35 relational_operator: T_LT
   36                    | T_EQ
   37                    | T_GT
   38                    | T_LEQ
   39                    | T_DIF
   40                    | T_GEQ

   41 simple_expression: term opt_adding_operator
   42                  | sign_operator term opt_adding_operator

   43 sign_operator: T_PLUS
   44              | T_MINUS

   45 adding_operator: T_PLUS
   46                | T_MINUS
   47                | T_OR

   48 term: factor opt_multiplying_operator

   49 multiplying_operator: T_TIMES
   50                     | T_DIV
   51                     | T_MOD
   52                     | T_AND

   53 factor: constant_use
   54       | variable_access
   55       | T_LBRACKET expression T_RBRACKET
   56       | T_NOT factor

   57 variable_access: T_ID

   58 constant: T_INT_CONST
   59         | T_REAL_CONST
   60         | T_BOOLEAN_CONST
   61         | T_ID

   62 constant_use: T_INT_CONST
   63             | T_REAL_CONST
   64             | T_BOOLEAN_CONST

   65 opt_procedure_definition: /* empty */
   66                         | procedure_definition opt_procedure_definition

   67 opt_constant_definition: /* empty */
   68                        | constant_definition opt_constant_definition

   69 opt_variable_definition: /* empty */
   70                        | variable_definition opt_variable_definition

   71 opt_id: /* empty */
   72       | T_COMMA T_ID opt_id

   73 opt_actual_parameter: /* empty */
   74                     | T_COMMA actual_parameter opt_actual_parameter

   75 opt_statement: /* empty */
   76              | T_SEMICOLON statement opt_statement

   77 opt_adding_operator: /* empty */
   78                    | adding_operator opt_adding_operator

   79 opt_parameter_definition: /* empty */
   80                         | T_SEMICOLON parameter_definition opt_parameter_definition

   81 opt_multiplying_operator: /* empty */
   82                         | multiplying_operator opt_multiplying_operator


Terminals, with rules where they appear

T_EOF (0) 0
T_ID (1) 1 5 9 13 25 26 57 61 72
T_INT_CONST (2) 58 62
T_REAL_CONST (3) 59 63
T_BOOLEAN_CONST (4) 60 64
T_PROGRAM (5) 1
T_PROCEDURE (6) 13
T_BEGIN (7) 32
T_END (8) 32
T_IF (9) 29 30
T_THEN (10) 29 30
T_ELSE (11) 30
T_WHILE (12) 31
T_DO (13) 31
T_ASSIGN (14) 24
T_PLUS (15) 43 45
T_MINUS (16) 44 46
T_TIMES (17) 49
T_DIVIDE (18)
T_DIV (19) 50
T_MOD (20) 51
T_PLUS_EQ (21)
T_MINUS_EQ (22)
T_TIMES_EQ (23)
T_AND (24) 52
T_OR (25) 47
T_NOT (26) 56
T_DIVIDE_EQ (27)
T_VAR (28) 7
T_INTEGER (29) 10
T_REAL (30) 12
T_BOOLEAN (31) 11
T_COLON (32) 9
T_SEMICOLON (33) 1 5 8 13 14 15 76 80
T_COMMA (34) 72 74
T_PERIOD (35) 1
T_DOUBLE_PERIOD (36)
T_LBRACKET (37) 15 26 55
T_RBRACKET (38) 15 26 55
T_CONST (39) 4
T_REPEAT (40)
T_UNTIL (41)
T_EQ (42) 5 36
T_DIF (43) 39
T_LT (44) 35
T_LEQ (45) 38
T_GT (46) 37
T_GEQ (47) 40
T_INVALID (255)
error (256)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
input (52)
    on left: 1, on right: 0
block_body (53)
    on left: 2, on right: 1 14 15
constant_definition_part (54)
    on left: 3 4, on right: 2
constant_definition (55)
    on left: 5, on right: 4 68
variable_definition_part (56)
    on left: 6 7, on right: 2
variable_definition (57)
    on left: 8, on right: 7 70
variable_group (58)
    on left: 9, on right: 8 17
type (59)
    on left: 10 11 12, on right: 9
procedure_definition (60)
    on left: 13, on right: 66
procedure_block (61)
    on left: 14 15, on right: 13
formal_parameter_list (62)
    on left: 16, on right: 15
parameter_definition (63)
    on left: 17, on right: 16 80
statement (64)
    on left: 18 19 20 21 22 23, on right: 29 30 31 32 76
assignment_statement (65)
    on left: 24, on right: 18
procedure_statement (66)
    on left: 25 26, on right: 19
actual_parameter_list (67)
    on left: 27, on right: 26
actual_parameter (68)
    on left: 28, on right: 27 74
if_statement (69)
    on left: 29 30, on right: 20
while_statement (70)
    on left: 31, on right: 21
compound_statement (71)
    on left: 32, on right: 2 22
expression (72)
    on left: 33 34, on right: 24 28 29 30 31 55
relational_operator (73)
    on left: 35 36 37 38 39 40, on right: 34
simple_expression (74)
    on left: 41 42, on right: 33 34
sign_operator (75)
    on left: 43 44, on right: 42
adding_operator (76)
    on left: 45 46 47, on right: 78
term (77)
    on left: 48, on right: 41 42
multiplying_operator (78)
    on left: 49 50 51 52, on right: 82
factor (79)
    on left: 53 54 55 56, on right: 48 56
variable_access (80)
    on left: 57, on right: 24 54
constant (81)
    on left: 58 59 60 61, on right: 5
constant_use (82)
    on left: 62 63 64, on right: 53
opt_procedure_definition (83)
    on left: 65 66, on right: 2 66
opt_constant_definition (84)
    on left: 67 68, on right: 4 68
opt_variable_definition (85)
    on left: 69 70, on right: 7 70
opt_id (86)
    on left: 71 72, on right: 9 72
opt_actual_parameter (87)
    on left: 73 74, on right: 27 74
opt_statement (88)
    on left: 75 76, on right: 32 76
opt_adding_operator (89)
    on left: 77 78, on right: 41 42 78
opt_parameter_definition (90)
    on left: 79 80, on right: 16 80
opt_multiplying_operator (91)
    on left: 81 82, on right: 48 82


state 0

    0 $accept: . input T_EOF

    T_PROGRAM  shift, and go to state 1

    input  go to state 2


state 1

    1 input: T_PROGRAM . T_ID T_SEMICOLON block_body T_PERIOD

    T_ID  shift, and go to state 3


state 2

    0 $accept: input . T_EOF

    T_EOF  shift, and go to state 4


state 3

    1 input: T_PROGRAM T_ID . T_SEMICOLON block_body T_PERIOD

    T_SEMICOLON  shift, and go to state 5


state 4

    0 $accept: input T_EOF .

    $default  accept


state 5

    1 input: T_PROGRAM T_ID T_SEMICOLON . block_body T_PERIOD

    T_CONST  shift, and go to state 6

    $default  reduce using rule 3 (constant_definition_part)

    block_body                go to state 7
    constant_definition_part  go to state 8


state 6

    4 constant_definition_part: T_CONST . constant_definition opt_constant_definition

    T_ID  shift, and go to state 9

    constant_definition  go to state 10


state 7

    1 input: T_PROGRAM T_ID T_SEMICOLON block_body . T_PERIOD

    T_PERIOD  shift, and go to state 11


state 8

    2 block_body: constant_definition_part . variable_definition_part opt_procedure_definition compound_statement

    T_VAR  shift, and go to state 12

    $default  reduce using rule 6 (variable_definition_part)

    variable_definition_part  go to state 13


state 9

    5 constant_definition: T_ID . T_EQ constant T_SEMICOLON

    T_EQ  shift, and go to state 14


state 10

    4 constant_definition_part: T_CONST constant_definition . opt_constant_definition

    T_ID  shift, and go to state 9

    $default  reduce using rule 67 (opt_constant_definition)

    constant_definition      go to state 15
    opt_constant_definition  go to state 16


state 11

    1 input: T_PROGRAM T_ID T_SEMICOLON block_body T_PERIOD .

    $default  reduce using rule 1 (input)


state 12

    7 variable_definition_part: T_VAR . variable_definition opt_variable_definition

    T_ID  shift, and go to state 17

    variable_definition  go to state 18
    variable_group       go to state 19


state 13

    2 block_body: constant_definition_part variable_definition_part . opt_procedure_definition compound_statement

    T_PROCEDURE  shift, and go to state 20

    $default  reduce using rule 65 (opt_procedure_definition)

    procedure_definition      go to state 21
    opt_procedure_definition  go to state 22


state 14

    5 constant_definition: T_ID T_EQ . constant T_SEMICOLON

    T_ID             shift, and go to state 23
    T_INT_CONST      shift, and go to state 24
    T_REAL_CONST     shift, and go to state 25
    T_BOOLEAN_CONST  shift, and go to state 26

    constant  go to state 27


state 15

   68 opt_constant_definition: constant_definition . opt_constant_definition

    T_ID  shift, and go to state 9

    $default  reduce using rule 67 (opt_constant_definition)

    constant_definition      go to state 15
    opt_constant_definition  go to state 28


state 16

    4 constant_definition_part: T_CONST constant_definition opt_constant_definition .

    $default  reduce using rule 4 (constant_definition_part)


state 17

    9 variable_group: T_ID . opt_id T_COLON type

    T_COMMA  shift, and go to state 29

    $default  reduce using rule 71 (opt_id)

    opt_id  go to state 30


state 18

    7 variable_definition_part: T_VAR variable_definition . opt_variable_definition

    T_ID  shift, and go to state 17

    $default  reduce using rule 69 (opt_variable_definition)

    variable_definition      go to state 31
    variable_group           go to state 19
    opt_variable_definition  go to state 32


state 19

    8 variable_definition: variable_group . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 33


state 20

   13 procedure_definition: T_PROCEDURE . T_ID procedure_block T_SEMICOLON

    T_ID  shift, and go to state 34


state 21

   66 opt_procedure_definition: procedure_definition . opt_procedure_definition

    T_PROCEDURE  shift, and go to state 20

    $default  reduce using rule 65 (opt_procedure_definition)

    procedure_definition      go to state 21
    opt_procedure_definition  go to state 35


state 22

    2 block_body: constant_definition_part variable_definition_part opt_procedure_definition . compound_statement

    T_BEGIN  shift, and go to state 36

    compound_statement  go to state 37


state 23

   61 constant: T_ID .

    $default  reduce using rule 61 (constant)


state 24

   58 constant: T_INT_CONST .

    $default  reduce using rule 58 (constant)


state 25

   59 constant: T_REAL_CONST .

    $default  reduce using rule 59 (constant)


state 26

   60 constant: T_BOOLEAN_CONST .

    $default  reduce using rule 60 (constant)


state 27

    5 constant_definition: T_ID T_EQ constant . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 38


state 28

   68 opt_constant_definition: constant_definition opt_constant_definition .

    $default  reduce using rule 68 (opt_constant_definition)


state 29

   72 opt_id: T_COMMA . T_ID opt_id

    T_ID  shift, and go to state 39


state 30

    9 variable_group: T_ID opt_id . T_COLON type

    T_COLON  shift, and go to state 40


state 31

   70 opt_variable_definition: variable_definition . opt_variable_definition

    T_ID  shift, and go to state 17

    $default  reduce using rule 69 (opt_variable_definition)

    variable_definition      go to state 31
    variable_group           go to state 19
    opt_variable_definition  go to state 41


state 32

    7 variable_definition_part: T_VAR variable_definition opt_variable_definition .

    $default  reduce using rule 7 (variable_definition_part)


state 33

    8 variable_definition: variable_group T_SEMICOLON .

    $default  reduce using rule 8 (variable_definition)


state 34

   13 procedure_definition: T_PROCEDURE T_ID . procedure_block T_SEMICOLON

    T_SEMICOLON  shift, and go to state 42
    T_LBRACKET   shift, and go to state 43

    procedure_block  go to state 44


state 35

   66 opt_procedure_definition: procedure_definition opt_procedure_definition .

    $default  reduce using rule 66 (opt_procedure_definition)


state 36

   32 compound_statement: T_BEGIN . statement opt_statement T_END

    T_ID     shift, and go to state 45
    T_BEGIN  shift, and go to state 36
    T_IF     shift, and go to state 46
    T_WHILE  shift, and go to state 47

    $default  reduce using rule 23 (statement)

    statement             go to state 48
    assignment_statement  go to state 49
    procedure_statement   go to state 50
    if_statement          go to state 51
    while_statement       go to state 52
    compound_statement    go to state 53
    variable_access       go to state 54


state 37

    2 block_body: constant_definition_part variable_definition_part opt_procedure_definition compound_statement .

    $default  reduce using rule 2 (block_body)


state 38

    5 constant_definition: T_ID T_EQ constant T_SEMICOLON .

    $default  reduce using rule 5 (constant_definition)


state 39

   72 opt_id: T_COMMA T_ID . opt_id

    T_COMMA  shift, and go to state 29

    $default  reduce using rule 71 (opt_id)

    opt_id  go to state 55


state 40

    9 variable_group: T_ID opt_id T_COLON . type

    T_INTEGER  shift, and go to state 56
    T_REAL     shift, and go to state 57
    T_BOOLEAN  shift, and go to state 58

    type  go to state 59


state 41

   70 opt_variable_definition: variable_definition opt_variable_definition .

    $default  reduce using rule 70 (opt_variable_definition)


state 42

   14 procedure_block: T_SEMICOLON . block_body

    T_CONST  shift, and go to state 6

    $default  reduce using rule 3 (constant_definition_part)

    block_body                go to state 60
    constant_definition_part  go to state 8


state 43

   15 procedure_block: T_LBRACKET . formal_parameter_list T_RBRACKET T_SEMICOLON block_body

    T_ID  shift, and go to state 17

    variable_group         go to state 61
    formal_parameter_list  go to state 62
    parameter_definition   go to state 63


state 44

   13 procedure_definition: T_PROCEDURE T_ID procedure_block . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 64


state 45

   25 procedure_statement: T_ID .
   26                    | T_ID . T_LBRACKET actual_parameter_list T_RBRACKET
   57 variable_access: T_ID .

    T_LBRACKET  shift, and go to state 65

    T_ASSIGN  reduce using rule 57 (variable_access)
    $default  reduce using rule 25 (procedure_statement)


state 46

   29 if_statement: T_IF . expression T_THEN statement
   30             | T_IF . expression T_THEN statement T_ELSE statement

    T_ID             shift, and go to state 66
    T_INT_CONST      shift, and go to state 67
    T_REAL_CONST     shift, and go to state 68
    T_BOOLEAN_CONST  shift, and go to state 69
    T_PLUS           shift, and go to state 70
    T_MINUS          shift, and go to state 71
    T_NOT            shift, and go to state 72
    T_LBRACKET       shift, and go to state 73

    expression         go to state 74
    simple_expression  go to state 75
    sign_operator      go to state 76
    term               go to state 77
    factor             go to state 78
    variable_access    go to state 79
    constant_use       go to state 80


state 47

   31 while_statement: T_WHILE . expression T_DO statement

    T_ID             shift, and go to state 66
    T_INT_CONST      shift, and go to state 67
    T_REAL_CONST     shift, and go to state 68
    T_BOOLEAN_CONST  shift, and go to state 69
    T_PLUS           shift, and go to state 70
    T_MINUS          shift, and go to state 71
    T_NOT            shift, and go to state 72
    T_LBRACKET       shift, and go to state 73

    expression         go to state 81
    simple_expression  go to state 75
    sign_operator      go to state 76
    term               go to state 77
    factor             go to state 78
    variable_access    go to state 79
    constant_use       go to state 80


state 48

   32 compound_statement: T_BEGIN statement . opt_statement T_END

    T_SEMICOLON  shift, and go to state 82

    $default  reduce using rule 75 (opt_statement)

    opt_statement  go to state 83


state 49

   18 statement: assignment_statement .

    $default  reduce using rule 18 (statement)


state 50

   19 statement: procedure_statement .

    $default  reduce using rule 19 (statement)


state 51

   20 statement: if_statement .

    $default  reduce using rule 20 (statement)


state 52

   21 statement: while_statement .

    $default  reduce using rule 21 (statement)


state 53

   22 statement: compound_statement .

    $default  reduce using rule 22 (statement)


state 54

   24 assignment_statement: variable_access . T_ASSIGN expression

    T_ASSIGN  shift, and go to state 84


state 55

   72 opt_id: T_COMMA T_ID opt_id .

    $default  reduce using rule 72 (opt_id)


state 56

   10 type: T_INTEGER .

    $default  reduce using rule 10 (type)


state 57

   12 type: T_REAL .

    $default  reduce using rule 12 (type)


state 58

   11 type: T_BOOLEAN .

    $default  reduce using rule 11 (type)


state 59

    9 variable_group: T_ID opt_id T_COLON type .

    $default  reduce using rule 9 (variable_group)


state 60

   14 procedure_block: T_SEMICOLON block_body .

    $default  reduce using rule 14 (procedure_block)


state 61

   17 parameter_definition: variable_group .

    $default  reduce using rule 17 (parameter_definition)


state 62

   15 procedure_block: T_LBRACKET formal_parameter_list . T_RBRACKET T_SEMICOLON block_body

    T_RBRACKET  shift, and go to state 85


state 63

   16 formal_parameter_list: parameter_definition . opt_parameter_definition

    T_SEMICOLON  shift, and go to state 86

    $default  reduce using rule 79 (opt_parameter_definition)

    opt_parameter_definition  go to state 87


state 64

   13 procedure_definition: T_PROCEDURE T_ID procedure_block T_SEMICOLON .

    $default  reduce using rule 13 (procedure_definition)


state 65

   26 procedure_statement: T_ID T_LBRACKET . actual_parameter_list T_RBRACKET

    T_ID             shift, and go to state 66
    T_INT_CONST      shift, and go to state 67
    T_REAL_CONST     shift, and go to state 68
    T_BOOLEAN_CONST  shift, and go to state 69
    T_PLUS           shift, and go to state 70
    T_MINUS          shift, and go to state 71
    T_NOT            shift, and go to state 72
    T_LBRACKET       shift, and go to state 73

    actual_parameter_list  go to state 88
    actual_parameter       go to state 89
    expression             go to state 90
    simple_expression      go to state 75
    sign_operator          go to state 76
    term                   go to state 77
    factor                 go to state 78
    variable_access        go to state 79
    constant_use           go to state 80


state 66

   57 variable_access: T_ID .

    $default  reduce using rule 57 (variable_access)


state 67

   62 constant_use: T_INT_CONST .

    $default  reduce using rule 62 (constant_use)


state 68

   63 constant_use: T_REAL_CONST .

    $default  reduce using rule 63 (constant_use)


state 69

   64 constant_use: T_BOOLEAN_CONST .

    $default  reduce using rule 64 (constant_use)


state 70

   43 sign_operator: T_PLUS .

    $default  reduce using rule 43 (sign_operator)


state 71

   44 sign_operator: T_MINUS .

    $default  reduce using rule 44 (sign_operator)


state 72

   56 factor: T_NOT . factor

    T_ID             shift, and go to state 66
    T_INT_CONST      shift, and go to state 67
    T_REAL_CONST     shift, and go to state 68
    T_BOOLEAN_CONST  shift, and go to state 69
    T_NOT            shift, and go to state 72
    T_LBRACKET       shift, and go to state 73

    factor           go to state 91
    variable_access  go to state 79
    constant_use     go to state 80


state 73

   55 factor: T_LBRACKET . expression T_RBRACKET

    T_ID             shift, and go to state 66
    T_INT_CONST      shift, and go to state 67
    T_REAL_CONST     shift, and go to state 68
    T_BOOLEAN_CONST  shift, and go to state 69
    T_PLUS           shift, and go to state 70
    T_MINUS          shift, and go to state 71
    T_NOT            shift, and go to state 72
    T_LBRACKET       shift, and go to state 73

    expression         go to state 92
    simple_expression  go to state 75
    sign_operator      go to state 76
    term               go to state 77
    factor             go to state 78
    variable_access    go to state 79
    constant_use       go to state 80


state 74

   29 if_statement: T_IF expression . T_THEN statement
   30             | T_IF expression . T_THEN statement T_ELSE statement

    T_THEN  shift, and go to state 93


state 75

   33 expression: simple_expression .
   34           | simple_expression . relational_operator simple_expression

    T_EQ   shift, and go to state 94
    T_DIF  shift, and go to state 95
    T_LT   shift, and go to state 96
    T_LEQ  shift, and go to state 97
    T_GT   shift, and go to state 98
    T_GEQ  shift, and go to state 99

    $default  reduce using rule 33 (expression)

    relational_operator  go to state 100


state 76

   42 simple_expression: sign_operator . term opt_adding_operator

    T_ID             shift, and go to state 66
    T_INT_CONST      shift, and go to state 67
    T_REAL_CONST     shift, and go to state 68
    T_BOOLEAN_CONST  shift, and go to state 69
    T_NOT            shift, and go to state 72
    T_LBRACKET       shift, and go to state 73

    term             go to state 101
    factor           go to state 78
    variable_access  go to state 79
    constant_use     go to state 80


state 77

   41 simple_expression: term . opt_adding_operator

    T_PLUS   shift, and go to state 102
    T_MINUS  shift, and go to state 103
    T_OR     shift, and go to state 104

    $default  reduce using rule 77 (opt_adding_operator)

    adding_operator      go to state 105
    opt_adding_operator  go to state 106


state 78

   48 term: factor . opt_multiplying_operator

    T_TIMES  shift, and go to state 107
    T_DIV    shift, and go to state 108
    T_MOD    shift, and go to state 109
    T_AND    shift, and go to state 110

    $default  reduce using rule 81 (opt_multiplying_operator)

    multiplying_operator      go to state 111
    opt_multiplying_operator  go to state 112


state 79

   54 factor: variable_access .

    $default  reduce using rule 54 (factor)


state 80

   53 factor: constant_use .

    $default  reduce using rule 53 (factor)


state 81

   31 while_statement: T_WHILE expression . T_DO statement

    T_DO  shift, and go to state 113


state 82

   76 opt_statement: T_SEMICOLON . statement opt_statement

    T_ID     shift, and go to state 45
    T_BEGIN  shift, and go to state 36
    T_IF     shift, and go to state 46
    T_WHILE  shift, and go to state 47

    $default  reduce using rule 23 (statement)

    statement             go to state 114
    assignment_statement  go to state 49
    procedure_statement   go to state 50
    if_statement          go to state 51
    while_statement       go to state 52
    compound_statement    go to state 53
    variable_access       go to state 54


state 83

   32 compound_statement: T_BEGIN statement opt_statement . T_END

    T_END  shift, and go to state 115


state 84

   24 assignment_statement: variable_access T_ASSIGN . expression

    T_ID             shift, and go to state 66
    T_INT_CONST      shift, and go to state 67
    T_REAL_CONST     shift, and go to state 68
    T_BOOLEAN_CONST  shift, and go to state 69
    T_PLUS           shift, and go to state 70
    T_MINUS          shift, and go to state 71
    T_NOT            shift, and go to state 72
    T_LBRACKET       shift, and go to state 73

    expression         go to state 116
    simple_expression  go to state 75
    sign_operator      go to state 76
    term               go to state 77
    factor             go to state 78
    variable_access    go to state 79
    constant_use       go to state 80


state 85

   15 procedure_block: T_LBRACKET formal_parameter_list T_RBRACKET . T_SEMICOLON block_body

    T_SEMICOLON  shift, and go to state 117


state 86

   80 opt_parameter_definition: T_SEMICOLON . parameter_definition opt_parameter_definition

    T_ID  shift, and go to state 17

    variable_group        go to state 61
    parameter_definition  go to state 118


state 87

   16 formal_parameter_list: parameter_definition opt_parameter_definition .

    $default  reduce using rule 16 (formal_parameter_list)


state 88

   26 procedure_statement: T_ID T_LBRACKET actual_parameter_list . T_RBRACKET

    T_RBRACKET  shift, and go to state 119


state 89

   27 actual_parameter_list: actual_parameter . opt_actual_parameter

    T_COMMA  shift, and go to state 120

    $default  reduce using rule 73 (opt_actual_parameter)

    opt_actual_parameter  go to state 121


state 90

   28 actual_parameter: expression .

    $default  reduce using rule 28 (actual_parameter)


state 91

   56 factor: T_NOT factor .

    $default  reduce using rule 56 (factor)


state 92

   55 factor: T_LBRACKET expression . T_RBRACKET

    T_RBRACKET  shift, and go to state 122


state 93

   29 if_statement: T_IF expression T_THEN . statement
   30             | T_IF expression T_THEN . statement T_ELSE statement

    T_ID     shift, and go to state 45
    T_BEGIN  shift, and go to state 36
    T_IF     shift, and go to state 46
    T_WHILE  shift, and go to state 47

    $default  reduce using rule 23 (statement)

    statement             go to state 123
    assignment_statement  go to state 49
    procedure_statement   go to state 50
    if_statement          go to state 51
    while_statement       go to state 52
    compound_statement    go to state 53
    variable_access       go to state 54


state 94

   36 relational_operator: T_EQ .

    $default  reduce using rule 36 (relational_operator)


state 95

   39 relational_operator: T_DIF .

    $default  reduce using rule 39 (relational_operator)


state 96

   35 relational_operator: T_LT .

    $default  reduce using rule 35 (relational_operator)


state 97

   38 relational_operator: T_LEQ .

    $default  reduce using rule 38 (relational_operator)


state 98

   37 relational_operator: T_GT .

    $default  reduce using rule 37 (relational_operator)


state 99

   40 relational_operator: T_GEQ .

    $default  reduce using rule 40 (relational_operator)


state 100

   34 expression: simple_expression relational_operator . simple_expression

    T_ID             shift, and go to state 66
    T_INT_CONST      shift, and go to state 67
    T_REAL_CONST     shift, and go to state 68
    T_BOOLEAN_CONST  shift, and go to state 69
    T_PLUS           shift, and go to state 70
    T_MINUS          shift, and go to state 71
    T_NOT            shift, and go to state 72
    T_LBRACKET       shift, and go to state 73

    simple_expression  go to state 124
    sign_operator      go to state 76
    term               go to state 77
    factor             go to state 78
    variable_access    go to state 79
    constant_use       go to state 80


state 101

   42 simple_expression: sign_operator term . opt_adding_operator

    T_PLUS   shift, and go to state 102
    T_MINUS  shift, and go to state 103
    T_OR     shift, and go to state 104

    $default  reduce using rule 77 (opt_adding_operator)

    adding_operator      go to state 105
    opt_adding_operator  go to state 125


state 102

   45 adding_operator: T_PLUS .

    $default  reduce using rule 45 (adding_operator)


state 103

   46 adding_operator: T_MINUS .

    $default  reduce using rule 46 (adding_operator)


state 104

   47 adding_operator: T_OR .

    $default  reduce using rule 47 (adding_operator)


state 105

   78 opt_adding_operator: adding_operator . opt_adding_operator

    T_PLUS   shift, and go to state 102
    T_MINUS  shift, and go to state 103
    T_OR     shift, and go to state 104

    $default  reduce using rule 77 (opt_adding_operator)

    adding_operator      go to state 105
    opt_adding_operator  go to state 126


state 106

   41 simple_expression: term opt_adding_operator .

    $default  reduce using rule 41 (simple_expression)


state 107

   49 multiplying_operator: T_TIMES .

    $default  reduce using rule 49 (multiplying_operator)


state 108

   50 multiplying_operator: T_DIV .

    $default  reduce using rule 50 (multiplying_operator)


state 109

   51 multiplying_operator: T_MOD .

    $default  reduce using rule 51 (multiplying_operator)


state 110

   52 multiplying_operator: T_AND .

    $default  reduce using rule 52 (multiplying_operator)


state 111

   82 opt_multiplying_operator: multiplying_operator . opt_multiplying_operator

    T_TIMES  shift, and go to state 107
    T_DIV    shift, and go to state 108
    T_MOD    shift, and go to state 109
    T_AND    shift, and go to state 110

    $default  reduce using rule 81 (opt_multiplying_operator)

    multiplying_operator      go to state 111
    opt_multiplying_operator  go to state 127


state 112

   48 term: factor opt_multiplying_operator .

    $default  reduce using rule 48 (term)


state 113

   31 while_statement: T_WHILE expression T_DO . statement

    T_ID     shift, and go to state 45
    T_BEGIN  shift, and go to state 36
    T_IF     shift, and go to state 46
    T_WHILE  shift, and go to state 47

    $default  reduce using rule 23 (statement)

    statement             go to state 128
    assignment_statement  go to state 49
    procedure_statement   go to state 50
    if_statement          go to state 51
    while_statement       go to state 52
    compound_statement    go to state 53
    variable_access       go to state 54


state 114

   76 opt_statement: T_SEMICOLON statement . opt_statement

    T_SEMICOLON  shift, and go to state 82

    $default  reduce using rule 75 (opt_statement)

    opt_statement  go to state 129


state 115

   32 compound_statement: T_BEGIN statement opt_statement T_END .

    $default  reduce using rule 32 (compound_statement)


state 116

   24 assignment_statement: variable_access T_ASSIGN expression .

    $default  reduce using rule 24 (assignment_statement)


state 117

   15 procedure_block: T_LBRACKET formal_parameter_list T_RBRACKET T_SEMICOLON . block_body

    T_CONST  shift, and go to state 6

    $default  reduce using rule 3 (constant_definition_part)

    block_body                go to state 130
    constant_definition_part  go to state 8


state 118

   80 opt_parameter_definition: T_SEMICOLON parameter_definition . opt_parameter_definition

    T_SEMICOLON  shift, and go to state 86

    $default  reduce using rule 79 (opt_parameter_definition)

    opt_parameter_definition  go to state 131


state 119

   26 procedure_statement: T_ID T_LBRACKET actual_parameter_list T_RBRACKET .

    $default  reduce using rule 26 (procedure_statement)


state 120

   74 opt_actual_parameter: T_COMMA . actual_parameter opt_actual_parameter

    T_ID             shift, and go to state 66
    T_INT_CONST      shift, and go to state 67
    T_REAL_CONST     shift, and go to state 68
    T_BOOLEAN_CONST  shift, and go to state 69
    T_PLUS           shift, and go to state 70
    T_MINUS          shift, and go to state 71
    T_NOT            shift, and go to state 72
    T_LBRACKET       shift, and go to state 73

    actual_parameter   go to state 132
    expression         go to state 90
    simple_expression  go to state 75
    sign_operator      go to state 76
    term               go to state 77
    factor             go to state 78
    variable_access    go to state 79
    constant_use       go to state 80


state 121

   27 actual_parameter_list: actual_parameter opt_actual_parameter .

    $default  reduce using rule 27 (actual_parameter_list)


state 122

   55 factor: T_LBRACKET expression T_RBRACKET .

    $default  reduce using rule 55 (factor)


state 123

   29 if_statement: T_IF expression T_THEN statement .
   30             | T_IF expression T_THEN statement . T_ELSE statement

    T_ELSE  shift, and go to state 133

    $default  reduce using rule 29 (if_statement)


state 124

   34 expression: simple_expression relational_operator simple_expression .

    $default  reduce using rule 34 (expression)


state 125

   42 simple_expression: sign_operator term opt_adding_operator .

    $default  reduce using rule 42 (simple_expression)


state 126

   78 opt_adding_operator: adding_operator opt_adding_operator .

    $default  reduce using rule 78 (opt_adding_operator)


state 127

   82 opt_multiplying_operator: multiplying_operator opt_multiplying_operator .

    $default  reduce using rule 82 (opt_multiplying_operator)


state 128

   31 while_statement: T_WHILE expression T_DO statement .

    $default  reduce using rule 31 (while_statement)


state 129

   76 opt_statement: T_SEMICOLON statement opt_statement .

    $default  reduce using rule 76 (opt_statement)


state 130

   15 procedure_block: T_LBRACKET formal_parameter_list T_RBRACKET T_SEMICOLON block_body .

    $default  reduce using rule 15 (procedure_block)


state 131

   80 opt_parameter_definition: T_SEMICOLON parameter_definition opt_parameter_definition .

    $default  reduce using rule 80 (opt_parameter_definition)


state 132

   74 opt_actual_parameter: T_COMMA actual_parameter . opt_actual_parameter

    T_COMMA  shift, and go to state 120

    $default  reduce using rule 73 (opt_actual_parameter)

    opt_actual_parameter  go to state 134


state 133

   30 if_statement: T_IF expression T_THEN statement T_ELSE . statement

    T_ID     shift, and go to state 45
    T_BEGIN  shift, and go to state 36
    T_IF     shift, and go to state 46
    T_WHILE  shift, and go to state 47

    $default  reduce using rule 23 (statement)

    statement             go to state 135
    assignment_statement  go to state 49
    procedure_statement   go to state 50
    if_statement          go to state 51
    while_statement       go to state 52
    compound_statement    go to state 53
    variable_access       go to state 54


state 134

   74 opt_actual_parameter: T_COMMA actual_parameter opt_actual_parameter .

    $default  reduce using rule 74 (opt_actual_parameter)


state 135

   30 if_statement: T_IF expression T_THEN statement T_ELSE statement .

    $default  reduce using rule 30 (if_statement)
